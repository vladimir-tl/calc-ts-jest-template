name: PR Test Reporter

on:
  push:
    branches:
      - '**'  # Trigger on any branch push
  pull_request:
    branches:
      - '**'  # Trigger on pull requests to any branch

permissions:
  pull-requests: write
  issues: write  # Needed to post comments on PRs

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Run Jest tests
        id: run-tests
        run: |
          npm test -- --json --outputFile=test-results.json

      - name: Check if test-results.json exists
        run: |
          if [ -f test-results.json ]; then
            echo "Test results file exists."
          else
            echo "Test results file does not exist."
            exit 1
          fi

      - name: Report test results (Push Event)
        if: ${{ github.event_name == 'push' }} # Runs only for push events
        run: |
          const fs = require('fs');
          try {
            const testResults = JSON.parse(fs.readFileSync('test-results.json', 'utf8'));

            const passed = testResults.numPassedTests;
            const failed = testResults.numFailedTests;
            const total = testResults.numTotalTests;

            const currentDate = new Date().toLocaleString('en-US', { timeZone: 'UTC', timeZoneName: 'short' });

            console.log(`::notice file=README.md::Test Results (Push Event) (Run at ${currentDate}):`);
            console.log(`- Passed: ${passed} ✅`);
            console.log(`- Failed: ${failed} ❌`);
            console.log(`- Total: ${total}`);
          } catch (error) {
            console.error('Error reading or parsing test-results.json:', error);
            process.exit(1); // Exit with error status
          }

      - name: Report test results (PR Event)
        if: ${{ github.event_name == 'pull_request' }} # Runs only for PR events
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const testResults = JSON.parse(fs.readFileSync('test-results.json', 'utf8'));

            const passed = testResults.numPassedTests;
            const failed = testResults.numFailedTests;
            const total = testResults.numTotalTests;

            const currentDate = new Date().toLocaleString('en-US', { timeZone: 'UTC', timeZoneName: 'short' });

            const prNumber = context.payload.pull_request?.number;

            if (prNumber) {
              const body = `
                Test Results (Run at ${currentDate}):
                - Passed: ${passed} ✅
                - Failed: ${failed} ❌
                - Total: ${total}
              `;

              try {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  body: body
                });
              } catch (error) {
                console.error('Error creating comment on PR:', error);
                process.exit(1); // Exit with error status
              }
            }
